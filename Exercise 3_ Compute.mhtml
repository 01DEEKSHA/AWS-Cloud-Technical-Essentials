From: <Saved by Blink>
Snapshot-Content-Location: https://aws-tc-largeobjects.s3-us-west-2.amazonaws.com/DEV-AWS-MO-GCNv2/exercise-3-compute.html
Subject: Exercise 3: Compute
Date: Wed, 22 Feb 2023 10:49:52 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--IIMzaRfj1pCj0IbY4mTCVV8gmjT3MQ8JsSlKtjZAyD----"


------MultipartBoundary--IIMzaRfj1pCj0IbY4mTCVV8gmjT3MQ8JsSlKtjZAyD----
Content-Type: text/html
Content-ID: <frame-130AA5DDA088AC371B9B5F48234B258A@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://aws-tc-largeobjects.s3-us-west-2.amazonaws.com/DEV-AWS-MO-GCNv2/exercise-3-compute.html

<!DOCTYPE html><html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"" xml:l=
ang=3D""><head><meta http-equiv=3D"Content-Type" content=3D"text/html; char=
set=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-4e0=
45018-da95-4e1d-8055-b1a102e46bf0@mhtml.blink" />
 =20
  <meta name=3D"generator" content=3D"pandoc">
  <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D=
1.0, user-scalable=3Dyes">
  <title>Exercise 3: Compute</title>
 =20
 =20


</head><body data-new-gr-c-s-check-loaded=3D"14.1097.0" data-gr-ext-install=
ed=3D"">
<p><em>[version_1.1]</em></p>
<div style=3D"background-color: #FFD2D2; padding: 15px; margin-bottom: 25px=
">
<h3>
<span class=3D"fa fa-info-circle"></span> Note
</h3>
<p>The exercises in this course will have an associated charge in your AWS =
account. In this exercise, you create or use the following resources:</p>
<ul>
<li>AWS Identity and Access Management (IAM) policy and user (policies and =
users are AWS account features, offered at no additional charge)</li>
<li>Amazon Elastic Compute Cloud (Amazon EC2) instance</li>
</ul>
<p>Familiarize yourself with <strong><a href=3D"https://aws.amazon.com/ec2/=
pricing/" target=3D"_blank">Amazon EC2 pricing</a></strong> and the <strong=
><a href=3D"https://aws.amazon.com/free/" target=3D"_blank">AWS Free Tier</=
a></strong>.</p>
</div>
<h1 id=3D"exercise-3-launching-an-ec2-instance">Exercise 3: Launching an EC=
2 Instance</h1>
<p>For this scenario, you create the employee directory application by usin=
g user data that you configure when you set up the EC2 instance.</p>
<p>In this exercise, you log in to the console as the IAM <em>Admin</em> us=
er. You then launch an EC2 instance by using the IAM role that you created =
previously. Finally, after you create the employee directory application, y=
ou stop and then terminate the instance. Because this instance launch is a =
dry run, you terminate the instance to prevent additional costs from incurr=
ing.</p>
<h2 id=3D"task-1-launching-an-ec2-instance-that-uses-a-role">Task 1: Launch=
ing an EC2 instance that uses a role</h2>
<p>In this task, you will launch an EC2 instance that hosts the employee di=
rectory application.</p>
<ol type=3D"1">
<li><p>If needed, log in to the AWS Management Console as your <em>Admin</e=
m> user.</p></li>
<li><p>In the <strong>Services</strong> search bar, search for <strong>EC2<=
/strong>, and open the service by choosing <strong>EC2</strong>.</p></li>
<li><p>In the navigation pane, under <strong>Instances</strong> choose <str=
ong>Instances</strong>.</p></li>
<li><p>Choose <strong>Launch instances</strong>.</p></li>
<li><p>For <strong>Name</strong> use <code>employee-directory-app</code>.</=
p></li>
<li><p>Under <strong>Application and OS Images (Amazon Machine Image)</stro=
ng>, choose <strong>Amazon Linux</strong>.</p></li>
<li><p>Under <strong>Instance type</strong>, select <strong>t2.micro</stron=
g>.</p></li>
<li><p>Under <strong>Key pair (login)</strong>, choose <strong>Create a new=
 key pair</strong>.</p></li>
<li><p>For <strong>Key pair name</strong>, paste <code>app-key-pair</code>.=
 Choose <strong>Create key pair</strong>. The required <strong>.pem</strong=
> file should automatically download for you.</p></li>
<li>Under <strong>Network settings</strong> and <strong>Edit</strong>: Keep=
 the default VPC selection, which should have <em>(default)</em> after the =
network name
<ul>
<li><strong>Subnet</strong>: Choose the first subnet in the dropdown list</=
li>
<li><strong>Auto-assign Public IP</strong>: <em>Enable</em></li>
</ul></li>
<li><p>Under <strong>Firewall (security groups)</strong> choose <strong>Cre=
ate security group</strong> use <code>app-sg</code> for the <strong>Securit=
y group name</strong> and <strong>Description</strong>.</p></li>
<li><p>Under <strong>Inbound security groups rules</strong> choose <strong>=
Remove</strong> above the <strong>ssh</strong> rule.</p></li>
<li><p>Choose <strong>Add security group rule</strong>. For <strong>Type</s=
trong> choose <strong>HTTP</strong>. Under <strong>Source type</strong> cho=
ose <strong>Anywhere</strong>.</p></li>
<li><p>Expand <strong>Advanced details</strong> and under <strong>IAM insta=
nce profile</strong> choose <strong>S3DynamoDBFullAccessRole</strong>.</p><=
/li>
<li><p>In the <strong>User data</strong> box, paste the following code:</p>
<div class=3D"sourceCode" id=3D"cb1"><pre class=3D"sourceCode bash" id=3D"c=
odeblock0"><code class=3D"sourceCode bash"><a class=3D"sourceLine" id=3D"cb=
1-1" title=3D"1"><span class=3D"co">#!/bin/bash -ex</span></a>
<a class=3D"sourceLine" id=3D"cb1-2" title=3D"2"><span class=3D"fu">wget</s=
pan> https://aws-tc-largeobjects.s3-us-west-2.amazonaws.com/DEV-AWS-MO-GCNv=
2/FlaskApp.zip</a>
<a class=3D"sourceLine" id=3D"cb1-3" title=3D"3"><span class=3D"fu">unzip</=
span> FlaskApp.zip</a>
<a class=3D"sourceLine" id=3D"cb1-4" title=3D"4"><span class=3D"bu">cd</spa=
n> FlaskApp/</a>
<a class=3D"sourceLine" id=3D"cb1-5" title=3D"5"><span class=3D"ex">yum</sp=
an> -y install python3 mysql</a>
<a class=3D"sourceLine" id=3D"cb1-6" title=3D"6"><span class=3D"ex">pip3</s=
pan> install -r requirements.txt</a>
<a class=3D"sourceLine" id=3D"cb1-7" title=3D"7"><span class=3D"ex">amazon-=
linux-extras</span> install epel</a>
<a class=3D"sourceLine" id=3D"cb1-8" title=3D"8"><span class=3D"ex">yum</sp=
an> -y install stress</a>
<a class=3D"sourceLine" id=3D"cb1-9" title=3D"9"><span class=3D"bu">export<=
/span> <span class=3D"va">PHOTOS_BUCKET=3D${SUB_PHOTOS_BUCKET}</span></a>
<a class=3D"sourceLine" id=3D"cb1-10" title=3D"10"><span class=3D"bu">expor=
t</span> <span class=3D"va">AWS_DEFAULT_REGION=3D</span><span class=3D"op">=
&lt;</span><span class=3D"ex">INSERT</span> REGION HERE<span class=3D"op">&=
gt;</span></a>
<a class=3D"sourceLine" id=3D"cb1-11" title=3D"11"><span class=3D"bu">expor=
t</span> <span class=3D"va">DYNAMO_MODE=3D</span>on</a>
<a class=3D"sourceLine" id=3D"cb1-12" title=3D"12"><span class=3D"va">FLASK=
_APP=3D</span>application.py <span class=3D"ex">/usr/local/bin/flask</span>=
 run --host=3D0.0.0.0 --port=3D80</a></code></pre><button class=3D"btn copy=
btn" data-clipboard-target=3D"#codeblock0"><img class=3D"clipboard" src=3D"=
https://aws-tc-largeobjects.s3-us-west-2.amazonaws.com/DEV-AWS-MO-GCNv2/ima=
ges/clipboard.svg" width=3D"13" alt=3D"Copy to clipboard"></button></div></=
li>
<li><p>In the pasted code, change the following line to match your Region (=
your Region is listed at the top right, next to your user name):</p>
<div class=3D"sourceCode" id=3D"cb2"><pre class=3D"sourceCode bash" id=3D"c=
odeblock1"><code class=3D"sourceCode bash"><a class=3D"sourceLine" id=3D"cb=
2-1" title=3D"1"><span class=3D"bu">export</span> <span class=3D"va">AWS_DE=
FAULT_REGION=3D</span><span class=3D"op">&lt;</span><span class=3D"ex">INSE=
RT</span> REGION HERE<span class=3D"op">&gt;</span></a></code></pre><button=
 class=3D"btn copybtn" data-clipboard-target=3D"#codeblock1"><img class=3D"=
clipboard" src=3D"https://aws-tc-largeobjects.s3-us-west-2.amazonaws.com/DE=
V-AWS-MO-GCNv2/images/clipboard.svg" width=3D"13" alt=3D"Copy to clipboard"=
></button></div>
<p>Example:</p>
<p>The following example uses the US West (Oregon) Region, or <em>us-west-2=
</em>.</p>
<div class=3D"sourceCode" id=3D"cb3"><pre class=3D"sourceCode bash" id=3D"c=
odeblock2"><code class=3D"sourceCode bash"><a class=3D"sourceLine" id=3D"cb=
3-1" title=3D"1"><span class=3D"bu">export</span> <span class=3D"va">AWS_DE=
FAULT_REGION=3D</span>us-west-2</a></code></pre><button class=3D"btn copybt=
n" data-clipboard-target=3D"#codeblock2"><img class=3D"clipboard" src=3D"ht=
tps://aws-tc-largeobjects.s3-us-west-2.amazonaws.com/DEV-AWS-MO-GCNv2/image=
s/clipboard.svg" width=3D"13" alt=3D"Copy to clipboard"></button></div>
<p><strong>Note:</strong> In a later lab, you will modify this user data sc=
ript again to use your Amazon Simple Storage Service (Amazon S3) bucket. Fo=
r now, keep <strong><code>${SUB_PHOTOS_BUCKET}</code></strong> in the scrip=
t.</p></li>
<li><p>Choose <strong>Launch instance</strong>.</p></li>
<li><p>Choose <strong>View all instances</strong>.</p>
<p>The instance should now be listed under <strong>Instances</strong>.</p><=
/li>
<li><p>Wait for the <strong>Instance state</strong> to change to <em>Runnin=
g</em> and the <strong>Status check</strong> to change to <em>2/2 checks pa=
ssed</em>.</p>
<p><strong>Note</strong>: Often, the status checks update, but the console =
user interface (UI) might not update to reflect the most recent information=
. You can minimize waiting by refreshing the page after a few minutes.</p><=
/li>
</ol>
<h2 id=3D"task-2.-viewing-the-application">Task 2. Viewing the application<=
/h2>
<p>In this task, you will view the application that=E2=80=99s running on th=
e instance in a web browser window.</p>
<ol type=3D"1">
<li><p>Select the instance by selecting its check box.</p>
<p>Instance information should load on the tabs in the pane.</p></li>
<li><p>On the <strong>Details</strong> tab, copy the <strong>Public IPv4 ad=
dress</strong>.</p>
<p><strong>Note</strong>: Make sure that you only copy the address instead =
of choosing the <strong>open address</strong> link.</p></li>
<li><p>In a new browser window, paste the IP address that you copied. <em>M=
ake sure to remove the =E2=80=98S=E2=80=99 after HTTP so you are using only=
 HTTP instead</em>.</p>
<p>You should see an <strong>Employee Directory</strong> placeholder. Right=
 now, you won=E2=80=99t be able to interact with it yet because the applica=
tion isn=E2=80=99t connected to a database.</p>
<p>Congratulations! You have successfully created an EC2 instance, which ho=
sts the employee directory application.</p>
<p>After you finish exploring the instance, you will stop and terminate you=
r instance so that you don=E2=80=99t incur future costs.</p></li>
</ol>
<h2 id=3D"task-3.-cleaning-up">Task 3. Cleaning up</h2>
<p>In this task, you will terminate the EC2 instance that you launched.</p>
<ol type=3D"1">
<li><p>Go back to the AWS Management Console.</p>
<p>The <em>employee-directory-app</em> instance should still be selected.</=
p></li>
<li><p>At the top of the console pane, choose <strong>Instance state</stron=
g>, choose <strong>Stop instance</strong>, and choose <strong>Stop</strong>=
.</p>
<p>The status in the <strong>Instance state</strong> column will eventually=
 go into the <em>Stopped</em> state.</p>
<p>Next, you will terminate the instance.</p></li>
<li><p>Make sure that check box next to the instance <strong>Name</strong> =
is selected.</p></li>
<li><p>Choose <strong>Instance state</strong>, choose <strong>Terminate ins=
tance</strong>, and choose <strong>Terminate</strong>.</p></li>
</ol>


<footer>
    <p>=C2=A9 2022 Amazon Web Services, Inc. or its affiliates. All rights =
reserved. This work may not be reproduced or redistributed, in whole or in =
part, without prior written permission from Amazon Web Services, Inc. Comme=
rcial copying, lending, or selling is prohibited. Corrections, feedback, or=
 other questions? Contact us at <a href=3D"https://support.aws.amazon.com/#=
/contacts/aws-training" target=3D"_blank">https://support.aws.amazon.com/#/=
contacts/aws-training</a>. All trademarks are the property of their owners.=
</p>
</footer>

</body><grammarly-desktop-integration data-grammarly-shadow-root=3D"true"><=
template shadowmode=3D"open"><div aria-label=3D"grammarly-integration" role=
=3D"group" tabindex=3D"-1" class=3D"grammarly-desktop-integration" data-con=
tent=3D"{&quot;mode&quot;:&quot;full&quot;,&quot;isActive&quot;:true,&quot;=
isUserDisabled&quot;:false}"></div></template></grammarly-desktop-integrati=
on></html>
------MultipartBoundary--IIMzaRfj1pCj0IbY4mTCVV8gmjT3MQ8JsSlKtjZAyD----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-4e045018-da95-4e1d-8055-b1a102e46bf0@mhtml.blink

@charset "utf-8";

html, body, footer { font-family: "Open Sans", "Helvetica Neue", Helvetica,=
 Arial, sans-serif; margin: 1em; }

img:not(.clipboard) { max-width: 100%; height: auto; width: auto; }

button.copybtn { transition: opacity 0.3s ease-in-out 0s; opacity: 0; paddi=
ng: 2px 6px; position: absolute; right: 4px; top: 4px; }

div.sourceCode:hover .copybtn, div.sourceCode .copybtn:focus { opacity: 0.3=
; }

div.sourceCode .copybtn:hover { opacity: 1; }

div.sourceCode { position: relative; }

.xmodule_display.xmodule_HtmlBlock ol { padding: 0px 0px 0px 2em !important=
; }

.xmodule_display.xmodule_HtmlBlock ul { padding: 0px 0px 0px 2em !important=
; }

code { border-radius: 4px; padding: 2px 4px !important; background-color: r=
gb(238, 238, 238) !important; }

pre code { display: block; overflow-x: auto; margin: 0px 0px 10px; font-siz=
e: 13px; line-height: 1.42857; word-break: break-all; overflow-wrap: break-=
word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; white-space=
: pre; padding: 9.5px !important; background-color: rgb(245, 245, 245) !imp=
ortant; }

pre code span.al { color: rgb(255, 0, 0); font-weight: bold; }

pre code span.an { color: rgb(96, 160, 176); font-weight: bold; font-style:=
 italic; }

pre code span.at { color: rgb(125, 144, 41); }

pre code span.bn { color: rgb(64, 160, 112); }

pre code span.bu { color: rgb(6, 40, 126); }

pre code span.cf { color: rgb(0, 112, 32); font-weight: bold; }

pre code span.ch { color: rgb(64, 112, 160); }

pre code span.cn { color: rgb(136, 0, 0); }

pre code span.co { color: rgb(96, 160, 176); font-style: italic; }

pre code span.cv { color: rgb(96, 160, 176); font-weight: bold; font-style:=
 italic; }

pre code span.do { color: rgb(186, 33, 33); font-style: italic; }

pre code span.dt { color: rgb(144, 32, 0); }

pre code span.dv { color: rgb(64, 160, 112); }

pre code span.er { color: rgb(255, 0, 0); font-weight: bold; }

pre code span.ex { color: rgb(6, 40, 126); }

pre code span.fl { color: rgb(64, 160, 112); }

pre code span.fu { color: rgb(6, 40, 126); }

pre code span.im { }

pre code span.in { color: rgb(96, 160, 176); font-weight: bold; font-style:=
 italic; }

pre code span.kw { color: rgb(0, 112, 32); font-weight: bold; }

pre code span.op { color: rgb(102, 102, 102); }

pre code span.ot { color: rgb(0, 112, 32); }

pre code span.pp { color: rgb(188, 122, 0); }

pre code span.sc { color: rgb(64, 112, 160); }

pre code span.ss { color: rgb(187, 102, 136); }

pre code span.st { color: rgb(64, 112, 160); }

pre code span.va { color: rgb(25, 23, 124); }

pre code span.vs { color: rgb(64, 112, 160); }

pre code span.wa { color: rgb(96, 160, 176); font-weight: bold; font-style:=
 italic; }

footer { padding-top: 3em; font-style: italic; font-size: 0.9em; }
------MultipartBoundary--IIMzaRfj1pCj0IbY4mTCVV8gmjT3MQ8JsSlKtjZAyD----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://aws-tc-largeobjects.s3-us-west-2.amazonaws.com/DEV-AWS-MO-GCNv2/images/clipboard.svg

<svg height=3D"1024" width=3D"896" xmlns=3D"http://www.w3.org/2000/svg">
  <path d=3D"M128 768h256v64H128v-64z m320-384H128v64h320v-64z m128 192V448=
L384 640l192 192V704h320V576H576z m-288-64H128v64h160v-64zM128 704h160v-64H=
128v64z m576 64h64v128c-1 18-7 33-19 45s-27 18-45 19H64c-35 0-64-29-64-64V1=
92c0-35 29-64 64-64h192C256 57 313 0 384 0s128 57 128 128h192c35 0 64 29 64=
 64v320h-64V320H64v576h640V768zM128 256h512c0-35-29-64-64-64h-64c-35 0-64-2=
9-64-64s-29-64-64-64-64 29-64 64-29 64-64 64h-64c-35 0-64 29-64 64z" />
</svg>=0A
------MultipartBoundary--IIMzaRfj1pCj0IbY4mTCVV8gmjT3MQ8JsSlKtjZAyD------
